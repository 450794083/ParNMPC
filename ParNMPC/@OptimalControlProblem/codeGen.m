function codeGen(OCP)
    % init C if it is empty when the names of u x p have been changed
    if OCP.dim.mu == 0
       OCP.C = symfun(zeros(0,1),[OCP.u;OCP.x;OCP.p]);
    end
    % init G if it is empty
    if OCP.dim.z == 0
       OCP.G = symfun(zeros(0,1),[OCP.u;OCP.x;OCP.p]);
    end
    % 
    if OCP.isMEnabled
        % forced to 'Euler'
        OCP.discretizationMethod = 'Euler';
    else
        % init M if it is disabled
        OCP.M = symfun(eye(OCP.dim.x),[OCP.u;OCP.x;OCP.p]);
    end
    showInfo(OCP);
    createNonemptySolution_FuncGen(OCP);
    %%
    disp('Generating OCP...');
    UXP = {OCP.u;OCP.x;OCP.p};
    %% LBarrier, LBarrieru, LBarrierx
    LBarrier = symfun(OCP.LBarrier,[OCP.u;OCP.x;OCP.p]);
    LBarrieru = jacobian(LBarrier,OCP.u);
    LBarrierx = jacobian(LBarrier,OCP.x);
    matlabFunction(LBarrier,LBarrieru,LBarrierx,...
        'File','./funcgen/OCP_GEN_LB_LBu_LBx',...
        'Vars',UXP,...
        'Outputs',{'LB','LBu','LBx'});
    matlabFunction(LBarrier,...
        'File','./funcgen/OCP_GEN_LB',...
        'Vars',UXP,...
        'Outputs',{'LB'});
    %% G
    matlabFunction(OCP.G,...
    'File','./funcgen/OCP_GEN_G',...
    'Vars',UXP,...
    'Outputs',{'G'});
    %% L, Lu, Lx
    Lu = jacobian(OCP.L,OCP.u);
    Lx = jacobian(OCP.L,OCP.x);
    matlabFunction(OCP.L,Lu,Lx,...
        'File','./funcgen/OCP_GEN_L_Lu_Lx',...
        'Vars',UXP,...
        'Outputs',{'L','Lu','Lx'});
    matlabFunction(OCP.L,...
    'File','./funcgen/OCP_GEN_L',...
    'Vars',UXP,...
    'Outputs',{'L'});
    %% C, Cu, Cx
    Cu = jacobian(OCP.C,OCP.u);
    Cx = jacobian(OCP.C,OCP.x);
    matlabFunction(OCP.C,Cu,Cx,...
    'File','./funcgen/OCP_GEN_C_Cu_Cx',...
    'Vars',UXP,...
    'Outputs',{'C','Cu','Cx'});
    matlabFunction(OCP.C,...
    'File','./funcgen/OCP_GEN_C',...
    'Vars',UXP,...
    'Outputs',{'C'});

    %% f, fu, fx, M(optional)
    fdt  = OCP.f*OCP.deltaTau;
    fudt = jacobian(fdt,OCP.u);
    fxdt = jacobian(fdt,OCP.x);

    matlabFunction(fdt,fudt,fxdt,...
        'File','./funcgen/OCP_GEN_fdt_fudt_fxdt',...
        'Vars',UXP,...
        'Outputs',{'fdt','fudt','fxdt'});
    matlabFunction(fdt,...
        'File','./funcgen/OCP_GEN_fdt',...
        'Vars',UXP,...
        'Outputs',{'fdt'});
    matlabFunction(OCP.M,...
            'File','./funcgen/OCP_GEN_M',...
            'Vars',UXP,...
        'Outputs',{'M'});
    
    if OCP.isMEnabled
        % Mx
        Mx = sym('Mx',[OCP.dim.x (OCP.dim.x*OCP.dim.x)]);
        for i = 1:OCP.dim.x
            Mx(:,(i-1)*OCP.dim.x+1:i*OCP.dim.x) = formula(diff(OCP.M,OCP.x(i)));
        end
        MxSymfun = symfun(Mx,[OCP.u;OCP.x;OCP.p]);
        matlabFunction(MxSymfun,...
            'File','./funcgen/OCP_GEN_Mx.m',...
            'Vars',UXP,...
            'Outputs',{'Mx'});
        % Mu
        Mu = sym('Mu',[OCP.dim.x (OCP.dim.x*OCP.dim.u)]);
        for i = 1:OCP.dim.u
            Mu(:,(i-1)*OCP.dim.x+1:i*OCP.dim.x) = formula(diff(OCP.M,OCP.u(i)));
        end
        MuSymfun = symfun(Mu,[OCP.u;OCP.x;OCP.p]);
        matlabFunction(MuSymfun,...
            'File','./funcgen/OCP_GEN_Mu.m',...
            'Vars',UXP,...
            'Outputs',{'Mu'});
    end
    disp('Done!');
end